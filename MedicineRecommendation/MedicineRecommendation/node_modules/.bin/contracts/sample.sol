pragma solidity >= 0.5.0 < 0.7.0;
contract medicines{
 struct manufacturer{
	// State variables
	 uint mid;
	 string fn;
	 string pl;
	 string ph;
	 string em;
	 string dis;
	 string up;

}
struct medicine{

	// State variables
	uint mid;
	uint m_id;
	uint medicine_id;
	string name;
	string ty;
	string amount;
	string cn;
	string n;
	string ul;
	string se;
	string s;
	string description;
	

}

 struct distributor{
	// State variables
	 uint did;
	 string fn;
	 string ln;
	 string pl;
	 string ph;
	 string em;
	

}
struct pharmacy{
	// State variables
	 uint pid;
	 string pn;
	 string pl;
	 string c;
	 string em;
	 string ph;
	 string li;
}
struct stocks{
	uint sid;
	uint stock_id;
	uint mid;
	uint m_id;
	uint did;
	uint pid;
	string stock;
	string mfg;
	string date;

}
manufacturer []p;
medicine []m;
distributor []d;
pharmacy []phr;
stocks []stk;



function add_man(uint mid, string memory fn,string memory pl,string memory ph,
	string memory em,string memory dis,string memory up) public{
	manufacturer memory p1=manufacturer(mid,fn,pl,ph,em,dis,up);
	p.push(p1);
}
function add_medicine(uint mid,uint medicine_id, uint m_id,string memory name,string memory ty,string memory a,string memory cn,string memory n,
	string memory ul,string memory se, string memory s,string memory description) public{
	medicine memory m1=medicine(mid,medicine_id,m_id,name,ty,a,cn,n,ul,se,s,description);
	m.push(m1);
}

function add_dis(uint did,string memory fn,string memory ln,string memory pl,string memory ph,string memory em ) public{
	distributor memory d1=distributor(did,fn,ln,pl,ph,em);
	d.push(d1);
}

function add_phar(uint pid,string memory pn,string memory pl,string memory c,string memory em,string memory ph,string memory image ) public{
	pharmacy memory ph1=pharmacy(pid,pn,pl,c,em,ph,image);
	phr.push(ph1);
}

function add_stock(uint sid,uint stock_id,uint mid,uint m_id,uint did,uint pid,string memory stock,string memory mfg,string memory date) public{
	stocks memory s1=stocks(sid,stock_id,mid,m_id,did,pid,stock,mfg,date);
	stk.push(s1);

}
}
